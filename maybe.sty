\NeedsTeXFormat{LaTeX2e}

\ProvidesPackage{maybe}[2018/25/08 v0.91 (G Sokolov)]
\PackageInfo{maybe}{Some probability and statistics stuff and common notation}

\RequirePackage{amsmath}
\RequirePackage{ifthen}
\RequirePackage{listofitems}
\RequirePackage{mathabx} % For absolute continuity symbol.
\RequirePackage{tikz}

\newif\ifmaybe@histabove
\newif\ifmaybe@histcenter
\newcommand{\maybehistabove}{
    \maybe@histabovetrue
    \maybe@histcenterfalse
}
\newcommand{\maybehistcenter}{
    \maybe@histabovefalse
    \maybe@histcentertrue
}
\maybehistabove % Default behavior.

\newif\ifmaybe@ticksabove
\newif\ifmaybe@ticksbelow
\newif\ifmaybe@tickscenter
\newcommand{\maybeticksabove}{
    \maybe@ticksabovetrue
    \maybe@ticksbelowfalse
    \maybe@tickscenterfalse
}
\newcommand{\maybeticksbelow}{
    \maybe@ticksabovefalse
    \maybe@ticksbelowtrue
    \maybe@tickscenterfalse
}
\newcommand{\maybetickscenter}{
    \maybe@ticksabovefalse
    \maybe@ticksbelowfalse
    \maybe@tickscentertrue
}
\maybetickscenter % Default behavior.


\DeclareOption{histabove}{\maybehistabove}
\DeclareOption{histcenter}{\maybehistcenter}
\ProcessOptions\relax

% ~~ TikZ styles ~~
\tikzset{maybe@barstyle/.style={thick, fill=white}}
\tikzset{maybe@boxstyle/.style={thick, fill=white}}
\tikzset{maybe@medianstyle/.style={thick}}
\tikzset{maybe@whiskerstyle/.style={thick}}
\tikzset{maybe@whisklinestyle/.style={thick}}
\tikzset{maybe@dotstyle/.style={color=black, fill=black}}
\tikzset{maybe@axisstyle/.style={}}
\tikzset{maybe@nodestlye/.style={}}
\tikzset{maybe@tickstlye/.style={}}

\newcommand{\mayberesetstyles}{
    \tikzset{maybe@barstyle/.style={thick, fill=white}}
    \tikzset{maybe@boxstyle/.style={thick, fill=white}}
    \tikzset{maybe@medianstyle/.style={thick}}
    \tikzset{maybe@whiskerstyle/.style={thick}}
    \tikzset{maybe@whisklinestyle/.style={thick}}
    \tikzset{maybe@dotstyle/.style={color=black, fill=black}}
    \tikzset{maybe@axisstyle/.style={}}
    \tikzset{maybe@nodestlye/.style={}}
    \tikzset{maybe@tickstlye/.style={}}
}

\newcommand{\maybesetaxisstyle}[1]{\tikzset{maybe@axisstyle/.style={#1}}}
\newcommand{\maybesetnodestyle}[1]{\tikzset{maybe@nodestlye/.style={#1}}}
\newcommand{\maybesettickstyle}[1]{\tikzset{maybe@tickstlye/.style={#1}}}
\newif\ifmaybe@printbarlabels
\newcommand{\maybeprintbarlabels}{
    \maybe@printbarlabelstrue
}
\newcommand{\maybenoprintbarlabels}{
    \maybe@printbarlabelsfalse
}
\maybeprintbarlabels


\newcommand{\maybe@xscale}{1.0}
\newcommand{\maybe@yscale}{1.0}
\newcommand{\mayberesetscale}{
    \renewcommand{\maybe@xscale}{1.0}
    \renewcommand{\maybe@yscale}{1.0}
}
\newcommand{\maybesetscale}[2]{
    \pgfmathparse{sign(#1)}
    \ifnum\pgfmathresult=0
        {\PackageError{maybe}{Zero x-scale not supported.}{\protect\maybesetscale\space only supports non-zero values.}}
    \fi
    \pgfmathparse{sign(#2)}
    \ifnum\pgfmathresult=0
        {\PackageError{maybe}{Zero y-scale not supported.}{\protect\maybesetscale\space only supports non-zero values.}}
    \fi
    \renewcommand{\maybe@xscale}{#1}
    \renewcommand{\maybe@yscale}{#2}
}
\newcommand{\maybexscale}{\maybe@xscale}
\newcommand{\maybeyscale}{\maybe@yscale}

\newcommand{\maybe@whiskertoboxratio}{0.75}


% ~~ QoL ~~
\newcommand{\maybe@xaxisextendfrom}{0.5em}
\newcommand{\maybe@xaxisextendto}{1em}
\newcommand{\maybe@yaxisextendfrom}{0.5ex}
\newcommand{\maybe@yaxisextendto}{1ex}
\newcommand{\maybe@axisnodeoffset}{2.0ex}
\newcommand{\maybe@tickoffset}{0.5ex}
\newcommand{\maybe@barknobradius}{0pt}


% ~~ Absolute continuity ~~
% Begin import of specific characters from another font.
% Setup the matha font (from mathabx.sty)
\DeclareFontFamily{U}{matha}{\hyphenchar\font45}
\DeclareFontShape{U}{matha}{m}{n}{
    <5> <6> <7> <8> <9> <10> gen * matha
    <10.95> matha10 <12> <14.4> <17.28> <20.74> <24.88> matha12
}{}
\DeclareSymbolFont{matha}{U}{matha}{m}{n}
% Define an \abscont character as \ll from the font (from mathabx.dcl)
\DeclareMathSymbol{\abscont}{3}{matha}{"21}
% End of import.


% ~~ Operators ~~
\let\Pr\relax
\DeclareMathOperator{\Prop}{\mathsf{Prop}}    % Proportion Pr.
\DeclareMathOperator{\Pr}{\mathsf{P}}         % Probability P.
\DeclareMathOperator{\dist}{\mathsf{dist}}    % Distance.
\DeclareMathOperator{\EV}{\mathsf{E}}         % Expected value.
\DeclareMathOperator{\Var}{\mathsf{Var}}      % Variance.
\DeclareMathOperator{\SD}{\mathsf{SD}}        % Standard deviation.
\DeclareMathOperator{\SE}{\mathsf{SE}}        % Standard error.
\DeclareMathOperator{\Cov}{\mathsf{Cov}}      % Covariance.
\DeclareMathOperator{\Corr}{\mathsf{Corr}}    % Correlation.
\DeclareMathOperator{\Bias}{\mathsf{Bias}}    % Bias.
\DeclareMathOperator{\MSE}{\mathsf{MSE}}      % Mean squared error.
\DeclareMathOperator{\MLE}{\mathsf{MLE}}      % Maximum likelihood estimator.
\DeclareMathOperator{\IQR}{\mathsf{IQR}}      % Inter-quartile range.


% ~~ Function-styled operators ~~
\DeclareMathOperator*{\Support}{supp}        % Support.
\DeclareMathOperator*{\argmax}{arg\,max}     % Argument where maximum is attained.
\DeclareMathOperator*{\argmin}{arg\,min}     % Argument where minimum is attained.
\DeclareMathOperator*{\esssup}{ess\,sup}     % Essental supremum.
\DeclareMathOperator*{\essinf}{ess\,inf}     % Essental infimum.
\DeclareMathOperator*{\esssupp}{ess\,supp}   % Essental support.


% ~~ Distributions ~~
\DeclareMathOperator{\DGaussian}{\mathrm{Gaussian}}     % Gaussian distribution.
\DeclareMathOperator{\DNormal}{\mathrm{Normal}}         % Normal distribution.
\DeclareMathOperator{\DLogNormal}{\ln \DNormal}         % Log-normal distribution.
\DeclareMathOperator{\DStudent}{\mathrm{Student's--{\it t}}} % Student's t-distribution.
\DeclareMathOperator{\DExponential}{\mathrm{Exp}}       % Exponential distribution.
\DeclareMathOperator{\DPareto}{\mathrm{Pareto}}         % Pareto distribution
\DeclareMathOperator{\DGamma}{\mathrm{Gamma}}           % Gamma distribution.
\DeclareMathOperator{\DBeta}{\mathrm{Beta}}             % Beta distribution.
\DeclareMathOperator{\DChiSquared}{\chi^2}              % Chi-squared distribution.
\DeclareMathOperator{\DBernoulli}{\mathrm{Bernoulli}}   % Bernoulli distribution.
\DeclareMathOperator{\DBinomial}{\mathrm{Binomial}}     % Binomial distribution.
\DeclareMathOperator{\DMultinomial}{\mathrm{Binomial}}  % Multinomial distribution.
\DeclareMathOperator{\DGeometric}{\mathrm{Geometric}}   % Geometric distribution.
\DeclareMathOperator{\DNBinomial}{\mathrm{NegBinomial}} % Negative Binomial distribution.
\DeclareMathOperator{\DUniform}{\mathrm{Uniform}}       % Uniform distribution.
\DeclareMathOperator{\DPoisson}{\mathrm{Poisson}}       % Poisson distribution.
\DeclareMathOperator{\DCauchy}{\mathrm{Cauchy}}         % Cauchy distribution.


% ~~ Misc ~~
\newcommand{\Hyp}{\mathcal{H}}
\newcommand{\iid}{\overset{\text{iid}}{\sim}}
\newcommand{\pto}{\overset{\text{p.~}}{\to}}    % Convergence in distribution.
\newcommand{\dto}{\overset{\text{d.~}}{\to}}    % Convergence in probability.
\newcommand{\asto}{\overset{\text{a.s.~}}{\to}} % Almost sure convergence.
\newcommand{\eqae}{\overset{\text{a.e.}}{=}}
\newcommand{\simapprox}{\overset{\approx}{\sim}}
\newcommand{\simexact}{\overset{\text{exact}}{\sim}}
\newcommand{\mean}[1]{\bar{#1}}


% ~~ Simple graphs ~~

% Draw a horizontal axis pointing to the right if \maybexscale > 0 and left if \maybexscale < 0.
% Arguments:
% -- 1 (defaults to empty): axis label.
% -- 2: range of x-coordinates.
% -- 3: y-location.
% Note: all lists should be comma-separated.
% Example: \maybeHAxis[$X$]{17, 29}{0};
\newcommand{\maybeHAxis}[3][]{%
    \pgfmathsetmacro{\maybe@axissign}{sign(\maybe@xscale)}
    \pgfmathsetmacro{\maybe@temp@from}{\maybe@xscale * min(#2)}
    \pgfmathsetmacro{\maybe@temp@to}{\maybe@xscale * max(#2)}
    \pgfmathsetmacro{\maybe@temp@y}{\maybe@yscale * (#3)}
    \ifthenelse{\equal{\maybe@axissign}{1}}%
        {\draw[->, maybe@axisstyle]
            ([xshift = -\maybe@xaxisextendfrom] \maybe@temp@from, \maybe@temp@y) --
            ([xshift = \maybe@xaxisextendto] \maybe@temp@to, \maybe@temp@y) node[right, maybe@nodestlye] {#1};}{}
    \ifthenelse{\equal{\maybe@axissign}{-1}}%
        {\draw[->, maybe@axisstyle]
            ([xshift = \maybe@xaxisextendfrom] \maybe@temp@from, \maybe@temp@y) --
            ([xshift = -\maybe@xaxisextendto] \maybe@temp@to, \maybe@temp@y) node[left, maybe@nodestlye] {#1};}{}
} % \maybeHAxis

% Draw a horizontal axis pointing to the right if \maybexscale > 0 and left if \maybexscale < 0.
% Arguments:
% -- 1 (defaults to empty): axis label.
% -- 2: range of y-coordinates.
% -- 3: x-location.
% Note: all lists should be comma-separated.
% Example: \maybeVAxis[$Y$]{17, 29}{0};
\newcommand{\maybeVAxis}[3][]{%
    \pgfmathsetmacro{\maybe@axissign}{sign(\maybe@yscale)}
    \pgfmathsetmacro{\maybe@temp@from}{\maybe@yscale * min(#2)}
    \pgfmathsetmacro{\maybe@temp@to}{\maybe@yscale * max(#2)}
    \pgfmathsetmacro{\maybe@temp@x}{\maybe@xscale * (#3)}
    \ifthenelse{\equal{\maybe@axissign}{1}}%
        {\draw[->, maybe@axisstyle]
            ([yshift = -\maybe@yaxisextendfrom] \maybe@temp@x, \maybe@temp@from) --
            ([yshift = \maybe@yaxisextendto] \maybe@temp@x, \maybe@temp@to) node[above, maybe@nodestlye] {#1};}{}
    \ifthenelse{\equal{\maybe@axissign}{-1}}%
        {\draw[->, maybe@axisstyle]
            ([yshift = \maybe@yaxisextendfrom] \maybe@temp@x, \maybe@temp@from) --
            ([yshift = -\maybe@yaxisextendto] \maybe@temp@x, \maybe@temp@to) node[below, maybe@nodestlye] {#1};}{}
} % \maybeVAxis

% Draw a horizontal sequence of labels.
% -- 1 (defaults to argument #2): list of x-labels.
% -- 2: list of x-coordinates.
% -- 3: shared y-location.
% Note: all lists should be comma-separated.
\newcommand{\maybeHLabels}[3][@]{%
    \readlist\maybe@temp@list{#2}
    \pgfmathtruncatemacro{\maybe@temp@lastindex}{\maybe@temp@listlen - 1}
    \pgfmathsetmacro{\maybe@temp@nodeoffset}{-sign(\maybe@yscale) * \maybe@axisnodeoffset}
    % ~~ Bars ~~
	\foreach \i in {0, ..., \maybe@temp@lastindex} {
        \pgfmathparse{{#2}[\i]};
        \let\maybe@temp@xcoordinate\pgfmathresult;
        \ifthenelse{\equal{#1}{@}}{
            \draw (\maybe@xscale * \maybe@temp@xcoordinate, {\maybe@yscale * (#3)}) node[yshift = \maybe@temp@nodeoffset, maybe@nodestlye] {$\maybe@temp@xcoordinate$};
        }{
            \pgfmathparse{{#1}[\i]};
            \let\maybe@temp@xlabel\pgfmathresult;
            \draw (\maybe@xscale * \maybe@temp@xcoordinate, {\maybe@yscale * (#3)}) node[yshift = \maybe@temp@nodeoffset, maybe@nodestlye] {\maybe@temp@xlabel};
        }
    } % \foreach
} % \maybeHLabels

% Draw a horizontal sequence of labels.
% -- 1 (defaults to argument #2): list of y-labels.
% -- 2: list of y-coordinates.
% -- 3: shared x-location.
% Note: all lists should be comma-separated.
\newcommand{\maybeVLabels}[3][@]{%
    \readlist\maybe@temp@list{#2}
    \pgfmathtruncatemacro{\maybe@temp@lastindex}{\maybe@temp@listlen - 1}
    \pgfmathsetmacro{\maybe@temp@nodeoffset}{-sign(\maybe@xscale) * \maybe@axisnodeoffset}
    % ~~ Bars ~~
	\foreach \i in {0, ..., \maybe@temp@lastindex} {
        \pgfmathparse{{#2}[\i]};
        \let\maybe@temp@ycoordinate\pgfmathresult;
        \ifthenelse{\equal{#1}{@}}{
            \draw ({\maybe@xscale * (#3)}, \maybe@yscale * \maybe@temp@ycoordinate) node[xshift = \maybe@temp@nodeoffset, maybe@nodestlye] {$\maybe@temp@ycoordinate$};
        }{
            \pgfmathparse{{#1}[\i]};
            \let\maybe@temp@ylabel\pgfmathresult;
            \draw ({\maybe@xscale * (#3)}, \maybe@yscale * \maybe@temp@ycoordinate) node[xshift = \maybe@temp@nodeoffset, maybe@nodestlye] {\maybe@temp@ylabel};
        }
    } % \foreach
} % \maybeVLabels

% Draw a horizontal sequence of ticks (vertical lines).
% -- 1: list of x-coordinates.
% -- 2: y-location of the axis.
\newcommand{\maybeHTicks}[2]{%
    \readlist\maybe@temp@list{#1}
    \pgfmathtruncatemacro{\maybe@temp@lastindex}{\maybe@temp@listlen - 1}
    \pgfmathsetmacro{\maybe@temp@y}{\maybe@yscale * (#2)}
    \ifmaybe@ticksabove
        \pgfmathsetmacro{\maybe@temp@yfrom}{0}
        \pgfmathsetmacro{\maybe@temp@yto}{sign(\maybe@yscale) * \maybe@tickoffset}
    \fi
    \ifmaybe@ticksbelow
        \pgfmathsetmacro{\maybe@temp@yfrom}{0}
        \pgfmathsetmacro{\maybe@temp@yto}{-sign(\maybe@yscale) * \maybe@tickoffset}
    \fi
    \ifmaybe@tickscenter
        \pgfmathsetmacro{\maybe@temp@yfrom}{-0.5 * sign(\maybe@yscale) * \maybe@tickoffset}
        \pgfmathsetmacro{\maybe@temp@yto}{0.5 * sign(\maybe@yscale) * \maybe@tickoffset}
    \fi
    % ~~ Ticks ~~
	\foreach \i in {0, ..., \maybe@temp@lastindex} {
        \pgfmathparse{{#1}[\i]};
        \let\maybe@temp@xcoordinate\pgfmathresult;
        \draw[maybe@tickstlye]
            ([yshift = \maybe@temp@yfrom] \maybe@xscale * \maybe@temp@xcoordinate, \maybe@temp@y) --
            ([yshift = \maybe@temp@yto] \maybe@xscale * \maybe@temp@xcoordinate, \maybe@temp@y);
    } % \foreach
} % \maybeHTicks

% Draw a vertical sequence of ticks (vertical lines).
% -- 1: list of y-coordinates.
% -- 2: x-location of the axis.
\newcommand{\maybeVTicks}[2]{%
    \readlist\maybe@temp@list{#1}
    \pgfmathtruncatemacro{\maybe@temp@lastindex}{\maybe@temp@listlen - 1}
    \pgfmathsetmacro{\maybe@temp@x}{\maybe@xscale * (#2)}
    \ifmaybe@ticksabove
        \pgfmathsetmacro{\maybe@temp@xfrom}{0}
        \pgfmathsetmacro{\maybe@temp@xto}{sign(\maybe@xscale) * \maybe@tickoffset}
    \fi
    \ifmaybe@ticksbelow
        \pgfmathsetmacro{\maybe@temp@xfrom}{0}
        \pgfmathsetmacro{\maybe@temp@xto}{-sign(\maybe@xscale) * \maybe@tickoffset}
    \fi
    \ifmaybe@tickscenter
        \pgfmathsetmacro{\maybe@temp@xfrom}{-0.5 * sign(\maybe@xscale) * \maybe@tickoffset}
        \pgfmathsetmacro{\maybe@temp@xto}{0.5 * sign(\maybe@xscale) * \maybe@tickoffset}
    \fi
    % ~~ Ticks ~~
	\foreach \i in {0, ..., \maybe@temp@lastindex} {
        \pgfmathparse{{#1}[\i]};
        \let\maybe@temp@ycoordinate\pgfmathresult;
        \draw[maybe@tickstlye]
            ([xshift = \maybe@temp@xfrom] \maybe@temp@x, \maybe@yscale * \maybe@temp@ycoordinate) --
            ([xshift = \maybe@temp@xto] \maybe@temp@x, \maybe@yscale * \maybe@temp@ycoordinate);
    } % \foreach
} % \maybeVTicks

% Draw vertical lines.
% Arguments:
% -- 1 (defaults to argument #3): list of labels.
% -- 2: list of x-coordinates.
% -- 3: list of line lengths.
% -- 4: y-location of the axis.
% Note: all lists should be comma-separated.
\newcommand{\maybeVBars}[4][@]{%
    \readlist\maybe@temp@list{#2}
    \pgfmathtruncatemacro{\maybe@temp@lastindex}{\maybe@temp@listlen - 1}
    \pgfmathsetmacro{\maybe@axissign}{sign(\maybe@yscale)}
    % ~~ Bars ~~
	\foreach \i in {0, ..., \maybe@temp@lastindex} {
        \pgfmathparse{{#2}[\i]};
        \let\maybe@temp@xcoordinate\pgfmathresult;
        \pgfmathparse{{#3}[\i]};
        \let\maybe@temp@length\pgfmathresult;
        \ifthenelse{\equal{#1}{@}}{}{%
            \pgfmathparse{{#1}[\i]};}
        \let\maybe@temp@label\pgfmathresult;
        \fill[maybe@dotstyle] (\maybe@xscale * \maybe@temp@xcoordinate, {\maybe@yscale * ((#4) + \maybe@temp@length)}) circle (\maybe@barknobradius);

        \ifmaybe@printbarlabels
            \ifnum\maybe@axissign=1
                \draw (\maybe@xscale * \maybe@temp@xcoordinate, {\maybe@yscale * ((#4) + \maybe@temp@length)}) node[above, maybe@nodestlye] {\maybe@temp@label};
            \else
                \draw (\maybe@xscale * \maybe@temp@xcoordinate, {\maybe@yscale * ((#4) + \maybe@temp@length)}) node[below, maybe@nodestlye] {\maybe@temp@label};
            \fi
        \else
            \draw (\maybe@xscale * \maybe@temp@xcoordinate, {\maybe@yscale * ((#4) + \maybe@temp@length)});
        \fi
        \draw[maybe@barstyle]
            (\maybe@xscale * \maybe@temp@xcoordinate, {\maybe@yscale * (#4)}) --
            (\maybe@xscale * \maybe@temp@xcoordinate, {\maybe@yscale * ((#4) + \maybe@temp@length)});
    } % \foreach
} % \maybeVBars

% Draw horizontal lines.
% Arguments:
% -- 1 (defaults to argument #3): list of labels.
% -- 2: list of y-coordinates.
% -- 3: list of line lengths.
% -- 4: x-location of the axis.
% Note: all lists should be comma-separated.
\newcommand{\maybeHBars}[4][@]{%
    \readlist\maybe@temp@list{#2}
    \pgfmathtruncatemacro{\maybe@temp@lastindex}{\maybe@temp@listlen - 1}
    \pgfmathsetmacro{\maybe@axissign}{sign(\maybe@xscale)}
    % ~~ Bars ~~
	\foreach \i in {0, ..., \maybe@temp@lastindex} {
        \pgfmathparse{{#2}[\i]};
        \let\maybe@temp@ycoordinate\pgfmathresult;
        \pgfmathparse{{#3}[\i]};
        \let\maybe@temp@length\pgfmathresult;
        \ifthenelse{\equal{#1}{@}}{}{%
            \pgfmathparse{{#1}[\i]};}
        \let\maybe@temp@label\pgfmathresult;
        \fill[maybe@dotstyle] ({\maybe@xscale * ((#4) + \maybe@temp@length)}, \maybe@yscale * \maybe@temp@ycoordinate) circle (\maybe@barknobradius);

        \ifmaybe@printbarlabels
            \ifnum\maybe@axissign=1
                \draw({\maybe@xscale * ((#4) + \maybe@temp@length)}, \maybe@yscale * \maybe@temp@ycoordinate) node[right, maybe@nodestlye] {\maybe@temp@label};
            \else
                \draw({\maybe@xscale * ((#4) + \maybe@temp@length)}, \maybe@yscale * \maybe@temp@ycoordinate) node[left, maybe@nodestlye] {\maybe@temp@label};
            \fi
        \else
            \draw({\maybe@xscale * ((#4) + \maybe@temp@length)}, \maybe@yscale * \maybe@temp@ycoordinate);
        \fi
        \draw[maybe@barstyle]
            ({\maybe@xscale * (#4)}, \maybe@yscale * \maybe@temp@ycoordinate) --
            ({\maybe@xscale * ((#4) + \maybe@temp@length)}, \maybe@yscale * \maybe@temp@ycoordinate);
    } % \foreach
} % \maybeHBars

% Draw a vertical histogram rectangle.
% Arguments:
% -- 1 (defaults to argument #4): label for the rectangle.
% -- 2: range of x-coordinates of the rectangle.
% -- 3: y-location of the axis.
% -- 4: area of the rectangle.
\newcommand{\maybeVHistBar}[4][@]{%
    \pgfmathsetmacro{\maybe@a}{{\maybe@xscale * min(#2)}}
    \pgfmathsetmacro{\maybe@b}{{\maybe@xscale * max(#2)}}
    \pgfmathsetmacro{\maybe@c}{0.5 * \maybe@a + 0.5 * \maybe@b}
    \pgfmathsetmacro{\maybe@y}{{\maybe@yscale * (#3)}}
    \pgfmathsetmacro{\maybe@width}{{abs(\maybe@b - \maybe@a)}}
    \pgfmathsetmacro{\maybe@height}{{\maybe@yscale * (#4) / \maybe@width}}
    \pgfmathsetmacro{\maybe@axissign}{sign(\maybe@yscale)}
    \draw[maybe@barstyle] (\maybe@a, \maybe@y + 0) rectangle (\maybe@b, \maybe@y + \maybe@height);
    \ifmaybe@printbarlabels
        \ifmaybe@histabove
            \ifnum\maybe@axissign=1
                \ifthenelse{\equal{#1}{@}}{%
                    \draw (\maybe@c, \maybe@y + \maybe@height) node[above, maybe@nodestlye] {#4};}{%
                    \draw (\maybe@c, \maybe@y + \maybe@height) node[above, maybe@nodestlye] {#1};}
            \else
                \ifthenelse{\equal{#1}{@}}{%
                    \draw (\maybe@c, \maybe@y + \maybe@height) node[below, maybe@nodestlye] {#4};}{%
                    \draw (\maybe@c, \maybe@y + \maybe@height) node[below, maybe@nodestlye] {#1};}
            \fi
        \fi
        \ifmaybe@histcenter
            \ifthenelse{\equal{#1}{@}}{%
                \draw (\maybe@c, \maybe@y + 0.5 * \maybe@height) node[maybe@nodestlye] {#4};}{%
                \draw (\maybe@c, \maybe@y + 0.5 * \maybe@height) node[maybe@nodestlye] {#1};}
        \fi
    \fi
} % \maybeVHistBar

% Draw a horizontal histogram rectangle.
% Arguments:
% -- 1 (defaults to argument #4): label for the rectangle.
% -- 2: range of y-coordinates of the rectangle.
% -- 3: x-location of the axis.
% -- 4: area of the rectangle.
\newcommand{\maybeHHistBar}[4][@]{%
    \pgfmathsetmacro{\maybe@a}{{\maybe@yscale * min(#2)}}
    \pgfmathsetmacro{\maybe@b}{{\maybe@yscale * max(#2)}}
    \pgfmathsetmacro{\maybe@c}{0.5 * \maybe@a + 0.5 * \maybe@b}
    \pgfmathsetmacro{\maybe@x}{{\maybe@xscale * (#3)}}
    \pgfmathsetmacro{\maybe@height}{{abs(\maybe@b - \maybe@a)}}
    \pgfmathsetmacro{\maybe@width}{{\maybe@xscale * (#4) / \maybe@height}}
    \pgfmathsetmacro{\maybe@axissign}{sign(\maybe@xscale)}
    \draw[maybe@barstyle] (\maybe@x + 0, \maybe@a) rectangle (\maybe@x + \maybe@width, \maybe@b);
    \ifmaybe@printbarlabels
        \ifmaybe@histabove
            \ifnum\maybe@axissign=1
                \ifthenelse{\equal{#1}{@}}{%
                    \draw (\maybe@x + \maybe@width, \maybe@c) node[right, maybe@nodestlye] {#4};}{%
                    \draw (\maybe@x + \maybe@width, \maybe@c) node[right, maybe@nodestlye] {#1};}
            \else
                \ifthenelse{\equal{#1}{@}}{%
                    \draw (\maybe@x + \maybe@width, \maybe@c) node[left, maybe@nodestlye] {#4};}{%
                    \draw (\maybe@x + \maybe@width, \maybe@c) node[left, maybe@nodestlye] {#1};}
            \fi
        \fi
        \ifmaybe@histcenter
            \ifthenelse{\equal{#1}{@}}{%
                \draw (\maybe@x + 0.5 * \maybe@width, \maybe@c) node[maybe@nodestlye] {#4};}{%
                \draw (\maybe@x + 0.5 * \maybe@width, \maybe@c) node[maybe@nodestlye] {#1};}
        \fi
    \fi
} % \maybeHHistBar

% Draw a horizontal box-plot.
% Arguments:
% -- 1: comma-separated list (left whisker, Q1, Q2, Q3, right whisker).
% -- 2: y-coordinate.
% -- 3: height of the box.
\newcommand{\maybeHBoxPlot}[3]{%
    \pgfmathparse{{#1}[0]}; \pgfmathsetmacro{\maybe@temp@a}{\maybe@xscale * \pgfmathresult};
    \pgfmathparse{{#1}[1]}; \pgfmathsetmacro{\maybe@temp@b}{\maybe@xscale * \pgfmathresult};
    \pgfmathparse{{#1}[2]}; \pgfmathsetmacro{\maybe@temp@c}{\maybe@xscale * \pgfmathresult};
    \pgfmathparse{{#1}[3]}; \pgfmathsetmacro{\maybe@temp@d}{\maybe@xscale * \pgfmathresult};
    \pgfmathparse{{#1}[4]}; \pgfmathsetmacro{\maybe@temp@e}{\maybe@xscale * \pgfmathresult};
    \pgfmathsetmacro{\maybe@temp@y}{\maybe@yscale * (#2)}
    \pgfmathsetmacro{\maybe@temp@boxfrom}{\maybe@temp@y - \maybe@yscale * 0.5 * (#3)}
    \pgfmathsetmacro{\maybe@temp@boxto}{\maybe@temp@y + \maybe@yscale * 0.5 * (#3)}
    \pgfmathsetmacro{\maybe@temp@whiskerfrom}{\maybe@temp@y - \maybe@yscale * 0.5 * \maybe@whiskertoboxratio * (#3)}
    \pgfmathsetmacro{\maybe@temp@whiskerto}{\maybe@temp@y + \maybe@yscale * 0.5 * \maybe@whiskertoboxratio * (#3)}
    % ~~ Box ~~
    \draw[maybe@boxstyle] (\maybe@temp@b, \maybe@temp@boxfrom) rectangle (\maybe@temp@d, \maybe@temp@boxto);
    \draw[maybe@medianstyle] (\maybe@temp@c, \maybe@temp@boxfrom) -- (\maybe@temp@c, \maybe@temp@boxto);
    % ~~ Whiskers ~~
    \draw[maybe@whisklinestyle] (\maybe@temp@a, \maybe@temp@y) -- (\maybe@temp@b, \maybe@temp@y);
    \draw[maybe@whisklinestyle] (\maybe@temp@d, \maybe@temp@y) -- (\maybe@temp@e, \maybe@temp@y);
    \draw[maybe@whiskerstyle] (\maybe@temp@a, \maybe@temp@whiskerfrom) -- (\maybe@temp@a, \maybe@temp@whiskerto);
    \draw[maybe@whiskerstyle] (\maybe@temp@e, \maybe@temp@whiskerfrom) -- (\maybe@temp@e, \maybe@temp@whiskerto);
} % \maybeHBoxPlot

% Draw a vertical box-plot.
% Arguments:
% -- 1: comma-separated list (bottom whisker, Q1, Q2, Q3, top whisker).
% -- 2: x-coordinate.
% -- 3: width of the box.
\newcommand{\maybeVBoxPlot}[3]{%
    \pgfmathparse{{#1}[0]}; \pgfmathsetmacro{\maybe@temp@a}{\maybe@yscale * \pgfmathresult};
    \pgfmathparse{{#1}[1]}; \pgfmathsetmacro{\maybe@temp@b}{\maybe@yscale * \pgfmathresult};
    \pgfmathparse{{#1}[2]}; \pgfmathsetmacro{\maybe@temp@c}{\maybe@yscale * \pgfmathresult};
    \pgfmathparse{{#1}[3]}; \pgfmathsetmacro{\maybe@temp@d}{\maybe@yscale * \pgfmathresult};
    \pgfmathparse{{#1}[4]}; \pgfmathsetmacro{\maybe@temp@e}{\maybe@yscale * \pgfmathresult};
    \pgfmathsetmacro{\maybe@temp@x}{\maybe@xscale * (#2)}
    \pgfmathsetmacro{\maybe@temp@boxfrom}{\maybe@temp@x - \maybe@xscale * 0.5 * (#3)}
    \pgfmathsetmacro{\maybe@temp@boxto}{\maybe@temp@x + \maybe@xscale * 0.5 * (#3)}
    \pgfmathsetmacro{\maybe@temp@whiskerfrom}{\maybe@temp@x - \maybe@xscale * 0.5 * \maybe@whiskertoboxratio * (#3)}
    \pgfmathsetmacro{\maybe@temp@whiskerto}{\maybe@temp@x + \maybe@xscale * 0.5 * \maybe@whiskertoboxratio * (#3)}
    % ~~ Box ~~
    \draw[maybe@boxstyle] (\maybe@temp@boxfrom, \maybe@temp@b) rectangle (\maybe@temp@boxto, \maybe@temp@d);
    \draw[maybe@medianstyle] (\maybe@temp@boxfrom, \maybe@temp@c) -- (\maybe@temp@boxto, \maybe@temp@c);
    % ~~ Whiskers ~~
    \draw[maybe@whisklinestyle] (\maybe@temp@x, \maybe@temp@a) -- (\maybe@temp@x, \maybe@temp@b);
    \draw[maybe@whisklinestyle] (\maybe@temp@x, \maybe@temp@d) -- (\maybe@temp@x, \maybe@temp@e);
    \draw[maybe@whiskerstyle] (\maybe@temp@whiskerfrom, \maybe@temp@a) -- (\maybe@temp@whiskerto, \maybe@temp@a);
    \draw[maybe@whiskerstyle] (\maybe@temp@whiskerfrom, \maybe@temp@e) -- (\maybe@temp@whiskerto, \maybe@temp@e);
} % \maybeVBoxPlot
