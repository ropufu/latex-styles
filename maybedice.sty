\NeedsTeXFormat{LaTeX2e}

\ProvidesPackage{maybedice}[2025/22/05 v0.1 (G Sokolov)]
\PackageInfo{maybedice}{A TiKZ-based package for handling dice}

\RequirePackage{ifthen}
\RequirePackage{tikz}
\RequirePackage{listofitems}


% ~~ TikZ styles ~~
\tikzset{maybedice@dotstlye/.style={}}
\tikzset{maybedice@nodestlye/.style={}}
\tikzset{maybedice@borderstlye/.style={}}

\newcommand{\maybediceresetstyles}{
    \tikzset{maybedice@dotstlye/.style={}}
    \tikzset{maybedice@nodestlye/.style={}}
    \tikzset{maybedice@borderstlye/.style={}}
}

\newcommand{\maybedicesetdotstyle}[1]{\tikzset{maybedice@dotstlye/.style={#1}}}
\newcommand{\maybedicesetnodestyle}[1]{\tikzset{maybedice@nodestlye/.style={#1}}}
\newcommand{\maybedicesetborderstyle}[1]{\tikzset{maybedice@borderstlye/.style={#1}}}


% ~~ TikZ geometry ~~
\newcommand{\maybedice@onethirdradius}{0.00980ex}
\newcommand{\maybedice@gridsize}{0.00735ex}
\newcommand{\maybedice@dotfactor}{1}
\newcommand{\maybedice@cornerfactor}{1}
\newcommand{\maybedice@origamistretch}{1}

\newcommand{\maybediceresetgeometry}{
    \renewcommand{\maybedice@dotfactor}{1}
    \renewcommand{\maybedice@cornerfactor}{1}
    \renewcommand{\maybedice@origamistretch}{1}
}

\newcommand{\maybedicesetdotfactor}[1]{\renewcommand{\maybedice@dotfactor}{#1}}
\newcommand{\maybedicesetcornerfactor}[1]{\renewcommand{\maybedice@cornerfactor}{#1}}
\newcommand{\maybedicesetorigamistretch}[1]{\renewcommand{\maybedice@origamistretch}{#1}}


% ~~ Epsdice alternative ~~

%  -3g    0    3g
%   .-----------. 3g
%   |   |   |   | 2g
%   |---+---+---| g
%   |   |   |   | 0
%   |---+---+---| -g
%   |   |   |   | -2g
%   .-----------. -3g
%

\newcommand{\maybedice@drawdotat}[3]{
    \fill[maybedice@dotstlye] (#1 * \g, #2 * \g) circle(#3 * 20 * \maybedice@dotfactor * \maybedice@gridsize);
}

\newcommand{\maybedice@drawdotrow}[3]{
    \pgfmathdectobase\maybedice@mask{#1}{10}
    \pgfmathtruncatemacro{\maybedice@left}{\maybedice@mask / 100}
    \pgfmathtruncatemacro{\maybedice@middle}{(\maybedice@mask - \maybedice@left * 100) / 10}
    \pgfmathtruncatemacro{\maybedice@right}{(\maybedice@mask - \maybedice@left * 100 - \maybedice@middle * 10)}
    
    \ifnum\maybedice@left=1
        \maybedice@drawdotat{-2}{#2}{#3};
    \fi
    \ifnum\maybedice@middle=1
        \maybedice@drawdotat{0}{#2}{#3};
    \fi
    \ifnum\maybedice@right=1
        \maybedice@drawdotat{2}{#2}{#3};
    \fi
}

\newcommand{\maybedice@drawdots}[2]{
    \readlist\maybedice@list{#1}
    
    \maybedice@drawdotrow{\maybedice@list[1]}{2}{#2};
    \maybedice@drawdotrow{\maybedice@list[2]}{0}{#2};
    \maybedice@drawdotrow{\maybedice@list[3]}{-2}{#2};
}

\newcommand{\maybemaskdice}[2][1.0]{%
    \begin{tikzpicture}[baseline = {([yshift = -0.7ex] current bounding box.center)}]
        \pgfmathsetmacro{\g}{#1 * \maybedice@gridsize}
        \pgfmathsetmacro{\r}{#1 * 3 * \maybedice@onethirdradius}
        \draw[rounded corners = #1 * 30 * \maybedice@cornerfactor * \maybedice@gridsize, line width = #1 * 0.4pt, maybedice@borderstlye] (-\r, -\r) rectangle (\r, \r);
        % ~~ Die ~~
        \maybedice@drawdots{#2}{#1};
    \end{tikzpicture}
}

\newcommand{\maybedice@ifdots}[4]{
    \ifthenelse{\equal{#1}{#2}}{%
        \pgfmathsetmacro{\maybe@good}{1}
        \maybedice@drawdots{#3}{#4};
    }{}
}

\newcommand{\maybedice}[2][1.0]{%
    \begin{tikzpicture}[baseline = {([yshift = -0.7ex] current bounding box.center)}]
        \pgfmathsetmacro{\maybe@good}{0}
        \pgfmathsetmacro{\g}{#1 * \maybedice@gridsize}
        \pgfmathsetmacro{\r}{#1 * 3 * \maybedice@onethirdradius}
        \draw[rounded corners = #1 * 30 * \maybedice@cornerfactor * \maybedice@gridsize, line width = #1 * 0.4pt, maybedice@borderstlye] (-\r, -\r) rectangle (\r, \r);
        % ~~ Cases ~~
        \maybedice@ifdots{#2}{1}{000, 010, 000}{#1};
        \maybedice@ifdots{#2}{2}{001, 000, 100}{#1};
        \maybedice@ifdots{#2}{3}{001, 010, 100}{#1};
        \maybedice@ifdots{#2}{4}{101, 000, 101}{#1};
        \maybedice@ifdots{#2}{5}{101, 010, 101}{#1};
        \maybedice@ifdots{#2}{6}{101, 101, 101}{#1};
        \maybedice@ifdots{#2}{7}{101, 111, 101}{#1};
        \maybedice@ifdots{#2}{8}{111, 101, 111}{#1};
        \maybedice@ifdots{#2}{9}{111, 111, 111}{#1};
        % ~~ Fallback ~~
        \ifthenelse{\equal{\maybe@good}{1}}{}{\PackageError{maybedice}{Die value of #2 not supported}{\protect\maybedice\space only supports values 1--9.}}
    \end{tikzpicture}
} % \maybedice

\newcommand{\maybevardice}[2][1.0]{%
    \begin{tikzpicture}[baseline = {([yshift = -0.7ex] current bounding box.center)}]
        \pgfmathsetmacro{\maybe@good}{0}
        \pgfmathsetmacro{\g}{#1 * \maybedice@gridsize}
        \pgfmathsetmacro{\r}{#1 * 3 * \maybedice@onethirdradius}
        \draw[rounded corners = #1 * 30 * \maybedice@cornerfactor * \maybedice@gridsize, line width = #1 * 0.4pt, maybedice@borderstlye] (-\r, -\r) rectangle (\r, \r);
        % ~~ Cases ~~
        \maybedice@ifdots{#2}{1}{000, 010, 000}{#1};
        \maybedice@ifdots{#2}{2}{100, 000, 001}{#1};
        \maybedice@ifdots{#2}{3}{100, 010, 001}{#1};
        \maybedice@ifdots{#2}{4}{010, 101, 010}{#1};
        \maybedice@ifdots{#2}{5}{010, 111, 010}{#1};
        \maybedice@ifdots{#2}{6}{111, 000, 111}{#1};
        \maybedice@ifdots{#2}{7}{111, 010, 111}{#1};
        \maybedice@ifdots{#2}{8}{111, 101, 111}{#1};
        \maybedice@ifdots{#2}{9}{111, 111, 111}{#1};
        % ~~ Fallback ~~
        \ifthenelse{\equal{\maybe@good}{1}}{}{\PackageError{maybedice}{Die value of #2 not supported}{\protect\maybevardice\space only supports values 1--9.}}
    \end{tikzpicture}
} % \maybevardice


% ~~ Origami: six-sided dice unwrapped ~~
%          .---.
%          |#5 |
%  .---.---.---.---.
%  |#1 |#2 |#3 |#4 |
%  .---.---.---.---.
%          |#6 |
%          .---.
%
\newcommand{\maybetinyorigamidice}[1]{
    \begin{tikzpicture}[baseline = {([yshift = -0.7ex] current bounding box.center)}]
        \pgfmathparse{dim({#1})};
        \let\maybe@sides\pgfmathresult;
        \pgfmathsetmacro{\r}{3 * \maybedice@onethirdradius}
        % ~~ d6 ~~
        \ifthenelse{\equal{\maybe@sides}{6}}{%
            \pgfmathsetmacro{\maybe@good}{1}
            \draw[maybedice@borderstlye] (-5 * \r, \r) -- (3 * \r, \r) -- (3 * \r, -\r) -- (-5 * \r, -\r) -- (-5 * \r, \r);
            \draw[maybedice@borderstlye] (-\r, 3 * \r) -- (\r, 3 * \r) -- (\r, -3 * \r) -- (-\r, -3 * \r) -- (-\r, 3 * \r);
            \draw[maybedice@borderstlye] (-3 * \r, \r) -- (-3 * \r, -\r);
        	\foreach \i in {0, ..., 3} {
                \pgfmathparse{{#1}[\i]};
                \let\maybe@label\pgfmathresult;
                \draw (-4 * \r + 2 * \r * \i, 0) node[maybedice@nodestlye] {\tiny\maybe@label};
            } % \foreach

            \pgfmathparse{{#1}[4]};
            \let\maybe@label\pgfmathresult;
            \draw (0, 2 * \r) node[maybedice@nodestlye] {\tiny\maybe@label};
            
            \pgfmathparse{{#1}[5]};
            \let\maybe@label\pgfmathresult;
            \draw (0, -2 * \r) node[maybedice@nodestlye] {\tiny\maybe@label};
        }{}
        \ifthenelse{\equal{\maybe@good}{1}}{}{\PackageError{maybedice}{Dice with \maybe@sides\space sides not supported}{\protect\maybetinyorigamidice\space only supports d6.}}
    \end{tikzpicture}
} % \maybetinyorigamidice

\newcommand{\maybetinyorigamidiestd}{\maybetinyorigamidice{2, 3, 5, 4, 6, 1}}

\newcommand{\maybeorigamidice}[1]{
    \begin{tikzpicture}[baseline = {([yshift = -0.7ex] current bounding box.center)}]
        \pgfmathparse{dim({#1})};
        \let\maybe@sides\pgfmathresult;
        \pgfmathsetmacro{\maybe@good}{0}
        \pgfmathsetmacro{\r}{9 * \maybedice@gridsize * \maybedice@origamistretch}
        % ~~ d6 ~~
        \ifthenelse{\equal{\maybe@sides}{6}}{%
            \pgfmathsetmacro{\maybe@good}{1}
            \draw[maybedice@borderstlye] (-5 * \r, \r) -- (3 * \r, \r) -- (3 * \r, -\r) -- (-5 * \r, -\r) -- (-5 * \r, \r);
            \draw[maybedice@borderstlye] (-\r, 3 * \r) -- (\r, 3 * \r) -- (\r, -3 * \r) -- (-\r, -3 * \r) -- (-\r, 3 * \r);
            \draw[maybedice@borderstlye] (-3 * \r, \r) -- (-3 * \r, -\r);
        	\foreach \i in {0, ..., 3} {
                \pgfmathparse{{#1}[\i]};
                \let\maybe@label\pgfmathresult;
                \draw (-4 * \r + 2 * \r * \i, 0) node[maybedice@nodestlye] {\maybe@label};
            } % \foreach

            \pgfmathparse{{#1}[4]};
            \let\maybe@label\pgfmathresult;
            \draw (0, 2 * \r) node[maybedice@nodestlye] {\maybe@label};

            \pgfmathparse{{#1}[5]};
            \let\maybe@label\pgfmathresult;
            \draw (0, -2 * \r) node[maybedice@nodestlye] {\maybe@label};
        }{}
        \ifthenelse{\equal{\maybe@good}{1}}{}{\PackageError{maybedice}{Dice with \maybe@sides\space sides not supported}{\protect\maybeorigamidice\space only supports d6.}}
    \end{tikzpicture}
} % \maybeorigamidice

\newcommand{\maybeorigamidiestd}{\maybeorigamidice{2, 3, 5, 4, 6, 1}}

